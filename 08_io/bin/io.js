// Generated by Haxe 3.4.0
(function ($global) { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function() { };
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var IO = function(f) {
	this.value = f;
};
IO.__name__ = true;
IO.of = function(x) {
	return new IO(function() {
		return x;
	});
};
IO.prototype = {
	map: function(f) {
		return new IO(Ramda.compose1(f,this.value));
	}
	,__class__: IO
};
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	var localStorage = [];
	localStorage.push("sky");
	localStorage.push("house");
	localStorage.push("tree");
	console.log("getFromStorage(0): " + Std.string((function(key) {
		return function() {
			return localStorage[key];
		};
	})(0)));
	new IO(function() {
		return window;
	}).map(function(win) {
		return win.innerWidth;
	});
};
Math.__name__ = true;
var Ramda = function() { };
Ramda.__name__ = true;
Ramda.add = function(v1,v2) {
	return v1 + v2;
};
Ramda.compose1 = function(f,g) {
	return function() {
		var tmp = g();
		return f(tmp);
	};
};
Ramda.compose2 = function(f,g) {
	return function(x) {
		var tmp = g(x);
		return f(tmp);
	};
};
Ramda.compose3 = function(f,g,h) {
	return function(x) {
		var tmp = h(x);
		var tmp1 = g(tmp);
		return f(tmp1);
	};
};
Ramda.compose4 = function(f,g,h,i) {
	return function(x) {
		var tmp = i(x);
		var tmp1 = h(tmp);
		var tmp2 = g(tmp1);
		return f(tmp2);
	};
};
Ramda.compose5 = function(f,g,h,i,j) {
	return function(x) {
		var tmp = j(x);
		var tmp1 = i(tmp);
		var tmp2 = h(tmp1);
		var tmp3 = g(tmp2);
		return f(tmp3);
	};
};
Ramda.sconcat = function(s1,s2) {
	return s1 + s2;
};
Ramda.map = function(f,list) {
	var length = list.length;
	var v = new Array(length);
	var _g1 = 0;
	var _g = list.length;
	while(_g1 < _g) {
		var i = _g1++;
		v[i] = f(list[i]);
	}
	return v.slice(0);
};
Ramda.match = function(rx,str) {
	var matches = [];
	if(rx.match(str)) {
		var i = 0;
		var isError = false;
		var matchedString = "";
		while(!isError) {
			try {
				matchedString = rx.matched(i);
			} catch( msg ) {
				if (msg instanceof js__$Boot_HaxeError) msg = msg.val;
				if( js_Boot.__instanceof(msg,String) ) {
					isError = true;
				} else throw(msg);
			}
			if(!isError) {
				var pos = 0;
				while(true) {
					pos = str.indexOf(matchedString,pos);
					if(pos != -1) {
						matches.push(matchedString);
						pos += matchedString.length;
					}
					if(!(pos != -1)) {
						break;
					}
				}
			}
			++i;
		}
	}
	return matches;
};
Ramda.prop = function(p,obj) {
	var tmp;
	var tmp1;
	if(obj == null) {
		tmp1 = null;
	} else {
		var tmp2;
		if(obj.__properties__) {
			tmp = obj.__properties__["get_" + p];
			tmp2 = tmp;
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			tmp1 = obj[tmp]();
		} else {
			tmp1 = obj[p];
		}
	}
	return tmp1;
};
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = intf[_g1++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
js_Boot.__toStr = ({ }).toString;
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
