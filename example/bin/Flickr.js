// Generated by Haxe 3.4.0
(function () { "use strict";
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Impure = function() { };
Impure.__name__ = true;
Impure.getJSON = function(callback,url) {
	$.getJSON(url,callback);
};
Impure.appendElements = function(sel,elements) {
	var _g_head = elements.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		$(sel).append(val);
	}
};
var Lambda = function() { };
Lambda.__name__ = true;
Lambda.map = function(it,f) {
	var l = new List();
	var x = $iterator(it)();
	while(x.hasNext()) l.add(f(x.next()));
	return l;
};
var List = function() {
	this.length = 0;
};
List.__name__ = true;
List.prototype = {
	add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
_$List_ListNode.__name__ = true;
var _$List_ListIterator = function(head) {
	this.head = head;
};
_$List_ListIterator.__name__ = true;
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
};
var Main = function() {
	var f = Ramda.compose2(function(a1) {
		return Ramda.prop("m",a1);
	},function(a11) {
		return Ramda.prop("media",a11);
	});
	var f1 = $bind(this,this.img);
	var a12 = Ramda.compose2(function(a2) {
		Impure.appendElements("body",a2);
	},Ramda.compose2(function(it) {
		return Lambda.map(it,f1);
	},Ramda.compose3(function(it1) {
		return Lambda.map(it1,f);
	},$bind(this,this.makeIterable),function(a13) {
		return Ramda.prop("items",a13);
	})));
	(Ramda.compose2(function(a21) {
		Impure.getJSON(a12,a21);
	},$bind(this,this.url)))("cats");
};
Main.__name__ = true;
Main.main = function() {
	new Main();
};
Main.prototype = {
	img: function(url) {
		var img = window.document.createElement("img");
		img.src = url;
		return img;
	}
	,ftrace: function(tag,x) {
		console.log(Std.string(tag) + ": " + Std.string(x));
		return x;
	}
	,makeIterable: function(array) {
		return array;
	}
	,url: function(term) {
		return "https://api.flickr.com/services/feeds/photos_public.gne?tags=" + term + "&format=json&jsoncallback=?";
	}
	,test: function() {
		var f = $bind(this,this.img);
		(Ramda.compose2(function(a2) {
			Impure.appendElements("body",a2);
		},Ramda.compose2(function(it) {
			return Lambda.map(it,f);
		},function(s) {
			return ["https://farm1.staticflickr.com/279/31748639490_a2f21fea58_m.jpg","https://farm6.staticflickr.com/5552/31282755894_519c3cf3b6_m.jpg","https://farm1.staticflickr.com/691/32004949241_aa92c68200_m.jpg","https://farm1.staticflickr.com/332/32084419796_0c848201ca_m.jpg","https://farm1.staticflickr.com/654/31974775322_c60fff31ed_m.jpg","https://farm1.staticflickr.com/339/32084201646_fff5829b77_m.jpg"];
		})))("test");
	}
};
Math.__name__ = true;
var Ramda = function() { };
Ramda.__name__ = true;
Ramda.compose2 = function(f,g) {
	return function(x) {
		var tmp = g(x);
		return f(tmp);
	};
};
Ramda.compose3 = function(f,g,h) {
	return function(x) {
		var tmp = h(x);
		var tmp1 = g(tmp);
		return f(tmp1);
	};
};
Ramda.compose4 = function(f,g,h,i) {
	return function(x) {
		var tmp = i(x);
		var tmp1 = h(tmp);
		var tmp2 = g(tmp1);
		return f(tmp2);
	};
};
Ramda.compose5 = function(f,g,h,i,j) {
	return function(x) {
		var tmp = j(x);
		var tmp1 = i(tmp);
		var tmp2 = h(tmp1);
		var tmp3 = g(tmp2);
		return f(tmp3);
	};
};
Ramda.prop = function(p,obj) {
	var tmp;
	var tmp1;
	if(obj == null) {
		tmp1 = null;
	} else {
		var tmp2;
		if(obj.__properties__) {
			tmp = obj.__properties__["get_" + p];
			tmp2 = tmp;
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			tmp1 = obj[tmp]();
		} else {
			tmp1 = obj[p];
		}
	}
	return tmp1;
};
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.__name__ = true;
Array.__name__ = true;
Main.main();
})();
